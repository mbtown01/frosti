{
  "annotations": {
    "list": [
      {
        "$$hashKey": "object:7",
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 1,
  "links": [],
  "panels": [
    {
      "datasource": "PostgreSQL",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "decimals": 1,
          "mappings": [],
          "noValue": "NONE",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              },
              {
                "color": "green",
                "value": 70
              },
              {
                "color": "yellow",
                "value": 80
              },
              {
                "color": "red",
                "value": 90
              }
            ]
          },
          "unit": "fahrenheit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 5,
        "x": 0,
        "y": 0
      },
      "id": 19,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "values": false
        }
      },
      "pluginVersion": "7.0.0",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  time AS \"time\",\n  temperature\nFROM sensor_reading\nORDER BY 1 DESC\nLIMIT 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "griddy_update",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Currently",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": "PostgreSQL",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "decimals": 3,
          "mappings": [],
          "max": 9,
          "min": -1,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "purple",
                "value": null
              },
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "super-light-green",
                "value": 0.04
              },
              {
                "color": "light-yellow",
                "value": 0.1
              },
              {
                "color": "light-orange",
                "value": 0.25
              },
              {
                "color": "semi-dark-orange",
                "value": 0.5
              },
              {
                "color": "dark-red",
                "value": 1
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 5,
        "y": 0
      },
      "id": 11,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "7.0.0",
      "targets": [
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  time as \"time\",\n  price AS \"price\"\nFROM griddy_update\nORDER BY 1 DESC\nLIMIT 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "price"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "griddy_update",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Power Price",
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": "PostgreSQL",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "decimals": 1,
          "mappings": [],
          "max": 100,
          "min": 20,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "yellow",
                "value": null
              },
              {
                "color": "green",
                "value": 30
              },
              {
                "color": "red",
                "value": 50
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 9,
        "y": 0
      },
      "id": 7,
      "interval": "1m",
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "7.0.0",
      "targets": [
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  time as \"time\",\n  humidity AS \"humidity\"\nFROM sensor_reading\nORDER BY 1 DESC\nLIMIT 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "humidity"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "humidity"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "sensor_reading",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamp",
          "where": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Humidity",
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": "PostgreSQL",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "decimals": 1,
          "mappings": [],
          "max": 90,
          "min": 60,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "dark-blue",
                "value": 0
              },
              {
                "color": "light-blue",
                "value": 60
              },
              {
                "color": "semi-dark-green",
                "value": 72
              },
              {
                "color": "#EF843C",
                "value": 80
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "fahrenheit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 11,
        "x": 13,
        "y": 0
      },
      "id": 9,
      "options": {
        "displayMode": "lcd",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "values": false
        },
        "showUnfilled": true
      },
      "pluginVersion": "7.0.0",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  time AS \"time\",\n  comfort_max AS \"Cooling Target\"\nFROM thermostat_targets\nORDER BY 1 DESC\nLIMIT 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "comfort_max"
                ],
                "type": "column"
              },
              {
                "params": [
                  "Cooling Target"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "thermostat_targets",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": []
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  time AS \"time\",\n  comfort_min AS \"Heating Target\"\nFROM thermostat_targets\nORDER BY 1 DESC\nLIMIT 1",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "comfort_min"
                ],
                "type": "column"
              },
              {
                "params": [
                  "Heating Target"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "thermostat_targets",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": []
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "bargauge"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "PostgreSQL",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "hiddenSeries": false,
      "id": 2,
      "interval": "1m",
      "legend": {
        "alignAsTable": false,
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "$$hashKey": "object:661",
          "alias": "humidity",
          "linewidth": 1,
          "yaxis": 2
        },
        {
          "$$hashKey": "object:662",
          "alias": "comfort_max",
          "color": "#73BF69",
          "fillBelowTo": "comfort_min",
          "lines": false,
          "zindex": -2
        },
        {
          "$$hashKey": "object:663",
          "alias": "comfort_min"
        },
        {
          "$$hashKey": "object:664",
          "alias": "temperature",
          "linewidth": 3
        },
        {
          "$$hashKey": "object:1078",
          "alias": "comfort_min",
          "lines": false
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(\"time\",$__interval),\n  avg(temperature) AS \"temperature\"\nFROM sensor_reading\nWHERE\n  $__timeFilter(\"time\")\nGROUP BY 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "temperature"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "temperature"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "sensor_reading",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(\"time\",$__interval),\n  avg(humidity) AS \"humidity\"\nFROM sensor_reading\nWHERE\n  $__timeFilter(\"time\")\nGROUP BY 1\nORDER BY 1",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "humidity"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "humidity"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "sensor_reading",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "previous"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n  $__timeGroupAlias(bar.time,$__interval,previous),\n  max(bar.comfort_max) AS \"comfort_max\"    \nfrom (\n    select\n        time,\n        last_value(comfort_max)\n        over (\n            partition by floor(extract(epoch from time)/60)*60\n            order by time\n            range between unbounded preceding and unbounded following\n        ) comfort_max\n    from\n        thermostat_targets\n    union\n    select\n        $__timeFrom() as time,\n        last_value(comfort_max)\n        over (\n            order by time\n            range between unbounded preceding and unbounded following\n        ) comfort_max\n    from\n        thermostat_targets\n    WHERE\n        \"time\" < $__timeFrom()\n) bar\nWHERE\n  $__timeFilter(\"time\")\nGROUP BY 1\nORDER BY 1",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "comfort_max"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "comfort_max"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "thermostat_targets",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "previous"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n  $__timeGroupAlias(bar.time,$__interval,previous),\n  max(bar.comfort_min) AS \"comfort_min\"    \nfrom (\n    select\n        time,\n        last_value(comfort_min)\n        over (\n            partition by floor(extract(epoch from time)/60)*60\n            order by time\n            range between unbounded preceding and unbounded following\n        ) comfort_min\n    from\n        thermostat_targets\n    union\n    select\n        $__timeFrom() as time,\n        last_value(comfort_min)\n        over (\n            order by time\n            range between unbounded preceding and unbounded following\n        ) comfort_min\n    from\n        thermostat_targets\n    WHERE\n        \"time\" < $__timeFrom()\n) bar\nWHERE\n  $__timeFilter(\"time\")\nGROUP BY 1\nORDER BY 1",
          "refId": "D",
          "select": [
            [
              {
                "params": [
                  "comfort_min"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "comfort_min"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "thermostat_targets",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Temperature vs Targets",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:701",
          "decimals": 1,
          "format": "farenheit",
          "label": "Temperature",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:702",
          "decimals": 1,
          "format": "percent",
          "label": "Humidity",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "PostgreSQL",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 3,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "hiddenSeries": false,
      "id": 13,
      "interval": "5s",
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "alias": "cooling",
          "color": "#5794F2"
        },
        {
          "alias": "heating",
          "color": "#F2495C"
        },
        {
          "alias": "fan",
          "color": "#73BF69"
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "previous"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(\"time\",$__interval,previous),\n  max(cooling) AS \"cooling\"\nFROM thermostat_state\nWHERE\n  $__timeFilter(\"time\")\nGROUP BY 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "cooling"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "cooling"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "thermostat_state",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "previous"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(\"time\",$__interval,previous),\n  max(heating) AS \"heating\"\nFROM thermostat_state\nWHERE\n  $__timeFilter(\"time\")\nGROUP BY 1\nORDER BY 1",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "heating"
                ],
                "type": "column"
              },
              {
                "params": [
                  "max"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "heating"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "thermostat_state",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Run History",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        },
        {
          "decimals": 0,
          "format": "short",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "PostgreSQL",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "hiddenSeries": false,
      "id": 4,
      "interval": "1m",
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            }
          ],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(\"time\",$__interval),\n  avg(price) AS \"price\"\nFROM griddy_update\nWHERE\n  $__timeFilter(\"time\")\nGROUP BY 1\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "price"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "griddy_update",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Power Price",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 4,
          "format": "currencyUSD",
          "label": "$/kW*hr",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "datasource": null,
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 0,
        "y": 20
      },
      "id": 17,
      "options": {
        "color": "red",
        "seriesCountSize": "sm",
        "showSeriesCount": false,
        "text": "Default value of text input option"
      },
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "type": "madllama-net-frosti-control-panel"
    },
    {
      "datasource": "PostgreSQL",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "decimals": 1,
          "mappings": [],
          "max": 60,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgb(150, 149, 149)",
                "value": null
              },
              {
                "color": "red",
                "value": 0.0001
              },
              {
                "color": "#EAB839",
                "value": 5
              },
              {
                "color": "green",
                "value": 8
              },
              {
                "color": "yellow",
                "value": 30
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "m"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 18,
        "x": 6,
        "y": 20
      },
      "id": 15,
      "options": {
        "displayMode": "lcd",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "values": false
        },
        "showUnfilled": true
      },
      "pluginVersion": "7.0.0",
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n    min(foo.time) as time, avg(foo.delta)/60.0 as \"average cycle time\"\nfrom (\n    select\n        time, 1 as group,\n        lag(cooling) over (order by time) as lastCooling,\n        lag(heating) over (order by time) as lastHeating,\n        extract(epoch from time-lag(time) over (order by time)) as delta\n    from thermostat_state\n    ) as foo\nwhere\n  $__timeFilter(foo.time)\n  and lastCooling + lastHeating > 0\ngroup by\n  foo.group",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "cooling"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "thermostat_state",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n    min(foo.time) as time, min(foo.delta)/60.0 as \"minimum cycle time\"\nfrom (\n    select\n        time, 1 as group,\n        lag(cooling) over (order by time) as lastCooling,\n        lag(heating) over (order by time) as lastHeating,\n        extract(epoch from time-lag(time) over (order by time)) as delta\n    from thermostat_state\n    ) as foo\nwhere\n  $__timeFilter(foo.time)\n  and lastCooling + lastHeating > 0\ngroup by\n  foo.group",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "cooling"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "thermostat_state",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select\n    min(foo.time) as time, max(foo.delta)/60.0 as \"maximun cycle time\"\nfrom (\n    select\n        time, 1 as group,\n        lag(cooling) over (order by time) as lastCooling,\n        lag(heating) over (order by time) as lastHeating,\n        extract(epoch from time-lag(time) over (order by time)) as delta\n    from thermostat_state\n    ) as foo\nwhere\n  $__timeFilter(foo.time)\n  and lastCooling + lastHeating > 0\ngroup by\n  foo.group",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "cooling"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "thermostat_state",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamptz",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "bargauge"
    }
  ],
  "refresh": "5m",
  "schemaVersion": 25,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Overview",
  "uid": "sCHCMTbWz",
  "version": 2
}