version: "3.7"

services:

  postgres:
    container_name: rpt-postgres
    labels: [rpt]
    image: ${HOSTTYPE_IMAGE_POSTGRES}
    environment:
      POSTGRES_USER: "rpt"
      POSTGRES_PASSWORD: "rpt"
      POSTGRES_DB: "rpt"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    
  grafana:
    build:
      args:
        HOSTTYPE_IMAGE: ${HOSTTYPE_IMAGE}
        GRAFANA_VERSION: ${GRAFANA_VERSION}
      context: ../
      dockerfile: ./docker/grafana/Dockerfile
    image: mbtowns/grafana:${HOSTTYPE}-latest
    container_name: rpt-grafana
    labels: [rpt]
    environment:
      TZ: ${TZ}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    volumes:
      - grafana-data:/etc/grafana
    entrypoint: ['/usr/sbin/grafana-server', 
      '-config', '/etc/grafana/grafana.ini', 'web']

  rpt-daemon:
    build:
      args:
        HOSTTYPE: ${HOSTTYPE}
        HOSTTYPE_IMAGE: ${HOSTTYPE_IMAGE}
        NODEJS_VERSION: ${NODEJS_VERSION}
      context: ../
      dockerfile: ./docker/rpt/Dockerfile
    image: mbtowns/rpt:${HOSTTYPE}-latest
    container_name: rpt-daemon
    labels: [rpt]
    privileged: true
    environment:
      TZ: ${TZ}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - grafana
    volumes:
      - ../:/usr/local/rpt
    entrypoint: ['python3', '-m', 'src', '--hardware', 'auto']

  rpt-term:
    build:
      args:
        HOSTTYPE: ${HOSTTYPE}
        HOSTTYPE_IMAGE: ${HOSTTYPE_IMAGE}
        NODEJS_VERSION: ${NODEJS_VERSION}
      context: ../
      dockerfile: ./docker/rpt/Dockerfile
    image: mbtowns/rpt:${HOSTTYPE}-latest
    container_name: rpt-term
    labels: [rpt]
    privileged: true
    environment:
      TZ: ${TZ}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - grafana
    volumes:
      - ../:/usr/local/rpt
    entrypoint: ['python3', '-m', 'src', '--hardware', 'term']

  rpt-daemon-debug:
    build:
      args:
        HOSTTYPE: ${HOSTTYPE}
        HOSTTYPE_IMAGE: ${HOSTTYPE_IMAGE}
        NODEJS_VERSION: ${NODEJS_VERSION}
      context: ../
      dockerfile: ./docker/rpt/Dockerfile
    image: mbtowns/rpt:${HOSTTYPE}-latest
    container_name: rpt-daemon-debug
    labels: [rpt]
    privileged: true
    environment:
      TZ: ${TZ}
    ports:
      - "5000:5000"
      - "3001:3001"
    depends_on:
      - postgres
      - grafana
    volumes:
      - ../:/usr/local/rpt
    entrypoint: ['python3', '-m', 'ptvsd',
      '--host', '0.0.0.0', '--port', '3001', '--wait', '-m', 'src',
      '--hardware', 'auto']

  rpt-term-debug:
    build:
      args:
        HOSTTYPE: ${HOSTTYPE}
        HOSTTYPE_IMAGE: ${HOSTTYPE_IMAGE}
        NODEJS_VERSION: ${NODEJS_VERSION}
      context: ../
      dockerfile: ./docker/rpt/Dockerfile
    image: mbtowns/rpt:${HOSTTYPE}-latest
    container_name: rpt-term-debug
    labels: [rpt]
    privileged: true
    environment:
      TZ: ${TZ}
    ports:
      - "5000:5000"
      - "3001:3001"
    depends_on:
      - postgres
      - grafana
    volumes:
      - ../:/usr/local/rpt
    entrypoint: ['python3', '-m', 'ptvsd',
      '--host', '0.0.0.0', '--port', '3001', '--wait', '-m', 'src',
      '--hardware', 'term']

  rpt-dev:
    build:
      args:
        HOSTTYPE: ${HOSTTYPE}
        HOSTTYPE_IMAGE: ${HOSTTYPE_IMAGE}
        NODEJS_VERSION: ${NODEJS_VERSION}
      context: ../
      dockerfile: ./docker/rpt/Dockerfile
    image: mbtowns/rpt:${HOSTTYPE}-latest
    container_name: rpt-dev
    labels: [rpt]
    privileged: true
    environment:
      TZ: ${TZ}
      LC_LOCAL: C
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - grafana
    volumes:
      - ../:/usr/local/rpt
    entrypoint: ['bash', '-c', 'while sleep 600; do /bin/false; done']

volumes:
  postgres-data:
    external: true
  grafana-data:
    external: true