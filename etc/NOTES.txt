# Build an image of the latest raspbian to setup ssh and come up on WiFi
# https://www.raspberrypi.org/downloads/raspbian/
sudo ./scripts/build_image.py \
    --hostname pi-test \
    --image ~/Downloads/2019-09-26-raspbian-buster-lite.img \
    --ssid umbatu-iot \
    --passwd ################ \
    --debug

# Update the pi
sudo apt update
sudo apt upgrade
sudo apt dist-upgrade

# use raspi-config to enable the i2c interface
raspi-config 

# Install Packages
sudo apt install vim wiringpi python3-pip i2c-tools python3-smbus

# install all the requied modules on the pi
pip3 install --user adafruit-circuitpython-bme280
pip3 install --user adafruit-blinka adafruit-circuitpython-charlcd
pip3 install --user flask influxdb requests pytest pytest-cov
pip3 install --user --upgrade ptvsd

# Debugging command on target pi
ssh pi@pi-dev python3 -m ptvsd --host 192.168.8.187 --port 3000 --wait /home/pi/thermostat/test.py

# For the mac
# Install homebrew
brew install python3
brew install coreutils

# Generate reaonable class diagram (from root of projet)
pyreverse -o png src

# Install the service
# https://www.raspberrypi.org/documentation/linux/usage/systemd.md
sudo cp rpt.service /etc/systemd/systemd
sudo systemctl enable rpt.service
sudo systemctl start rpt.service


# Docker documentation running locally
docker run -ti -p 4000:4000 docs/docker.github.io:latest

# List already-configured images
docker images

# Docker restart an image (example a532fe3b344a)
docker run -d a532fe3b344a

# Postgres
docker pull postgres
docker run -d --name rpt-postgres -v ~/projects/rpt-postgres:/var/lib/postgresql/data -p 54320:5432 postgres
docker exec -it rpt-postgres psql -U postgres -c "create database rpt"
docker exec -it rpt-postgres psql -U postgres -c "create user admin with password 'admin'"
docker exec -it rpt-postgres psql -U postgres -c "grant all privileges on database rpt to admin"

# Grafana
docker pull grafana/grafana
docker run -d --name=rpt-grafana -v ~/projects/rpt-grafana:/var/lib/grafana -p 3000:3000 grafana/grafana
